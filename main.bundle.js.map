{"version":3,"sources":["webpack:///./src/polyfills.ts?5d2d","webpack:///./src/app/markdown/markdown.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/demo/demo.component.ts","webpack:///./src/app/demo/demo.module.ts","webpack:///./src/app/markdown/markdown.component.ts","webpack:///./src/app/markdown/markdown.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/demo/demo.component.css","webpack:///./src/app/demo/demo.component.html"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;GAcG;AA6ByB;AACA;AAWF;AAI1B;;GAEG;AAEH;;;GAGG;AACH,oDAAoD;;;;;;;;;;;;;;;;;;;;;;;ACnEV;AACN;AACpB;AAIhB;IAEE,yBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,oCAAU,GAAV,UAAW,IAAY;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAPH;QAAC,wFAAU,EAAE;;uBAAA;IAQb,sBAAC;;AAAD,CAAC;;;;;;;;ACbD;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;;ACNuB;AAEmD;AAC5B;AACU;AACL;AAEnD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,yEAAU,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;ACXZ;AACzC,mDAAmD;AAQnD;IAAA;QACS,WAAM,GAAG,gEAOjB,CAAC;IAEF,CAAC;IAfD;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAoC;YACpC,kCAAmC;SACpC,CAAC;;qBAAA;IAWF,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACnBuC;AACiB;AAET;AACY;AAgB5D;IAAA;IAA0B,CAAC;IAd3B;QAAC,sFAAQ,CAAC;YACR,OAAO,EAAE;gBACP,sEAAa;aACd;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,iFAAc;aACf;YACD,YAAY,EAAE;gBACZ,sEAAa;aACd;YACD,SAAS,EAAE,CAAC,sEAAa,CAAC;SAE3B,CAAC;;kBAAA;IACwB,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBwD;AAC/C;AACH;AACmB;AAE9B;AACa;AACG;AACD;AACG;AACF;AACD;AACC;AACA;AAYtC;IAMI,2BACY,SAA0B,EAC1B,EAAc,EACd,IAAU;QAFV,cAAS,GAAT,SAAS,CAAiB;QAC1B,OAAE,GAAF,EAAE,CAAY;QACd,SAAI,GAAJ,IAAI,CAAM;IAClB,CAAC;IAEL,oCAAQ,GAAR;QACI,0BAA0B;QAC1B,+CAA+C;IACnD,CAAC;IAED;;OAEG;IACH,uCAAW,GAAX;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,2CAAe,GAAf;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YACxD,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,GAAG,oCAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClD,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;IACL,CAAC;IAED;;OAEG;IACH,sCAAU,GAAV;QAAA,iBAYC;QAXG,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QACtD,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;aAC/B,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,EAAE,GAAG,KAAI,CAAC,GAAG,KAAK,IAAI,GAAG,KAAK,GAAG,KAAI,CAAC,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC5F,KAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,GAAG,oCAAM,CAAC,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAChE,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,EACD,aAAG,IAAI,YAAI,CAAC,WAAW,EAAhB,CAAgB,CAAC,CAAC;IACjC,CAAC;IAED;;OAEG;IACK,uCAAW,GAAnB,UAAoB,KAAU;QAC1B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC,yBAAyB;QACpE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,mCAAO,GAAP,UAAQ,GAAQ;QAAhB,iBAcC;QAbG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACP,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAClC,IAAI,aAAW,GAAG,KAAK,CAAC;YACxB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,IAAY;gBACpC,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;oBAChD,aAAW,GAAG,CAAC,aAAW,CAAC;gBAC/B,CAAC;gBACD,MAAM,CAAC,aAAW,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC5C,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IAED;;OAEG;IACH,oCAAQ,GAAR,UAAS,IAAY;QACjB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC;IArFD;QAAC,mFAAK,EAAE;;mDAAA;IAVZ;QAAC,uFAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,2BAA2B;YACrC,MAAM,EAAE;gBACJ,2IAEE;aACL;SACJ,CAAC;;yBAAA;IAwFF,wBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;AChH4D;AACnB;AACc;AACJ;AAQpD;IAAA;IAMA,CAAC;IALQ,sBAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,cAAc;SACzB,CAAC;IACJ,CAAC;IAXH;QAAC,sFAAQ,CAAC;YACR,OAAO,EAAE,CAAC,8EAAiB,CAAC;YAC5B,OAAO,EAAE,CAAC,iEAAU,CAAC;YACrB,YAAY,EAAE,CAAC,8EAAiB,CAAC;YACjC,SAAS,EAAE,CAAC,0EAAe,CAAC;SAC7B,CAAC;;sBAAA;IAOF,qBAAC;AAAD,CAAC;;;;;;;;;ACjBD;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF;AACA;AACA,4GAA6G;;AAE7G;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,iuFAAiuF,WAAW,kNAAkN,WAAW,45HAA45H,yBAAyB,8VAA8V,yBAAyB,kmC","file":"main.bundle.js","sourcesContent":["/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\nimport 'core-js/es6/reflect';\nimport 'core-js/es7/reflect';\n\n\n/** ALL Firefox browsers require the following to support `@angular/animation`. **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`.\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/Rx';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable()\nexport class MarkdownService {\n\n  constructor(private http: Http) { }\n\n  getContent(path: string):Observable<any> {\n    return this.http.get(path);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/markdown/markdown.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 370;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 370\n// module chunks = 1","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { DemoModule } from './app/demo/demo.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(DemoModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n// import fileContent from 'raw-loader!./demo.cpp';\n\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent {\n  public myText = `# Headers\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n`;\n  // public fileContent = fileContent;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/demo.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { DemoComponent } from './demo.component';\nimport { MarkdownModule } from '../markdown/markdown.module';\n\n@NgModule({\n  exports: [\n    DemoComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MarkdownModule\n  ],\n  declarations: [\n    DemoComponent\n  ],\n  bootstrap: [DemoComponent]\n\n})\nexport class DemoModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/demo.module.ts","import { Component, ElementRef, OnInit, AfterViewInit, Input } from '@angular/core';\nimport { Http } from '@angular/http';\nimport * as  marked from 'marked';\nimport { MarkdownService } from './markdown.service';\n\nimport 'prismjs/prism';\nimport 'prismjs/components/prism-c';\nimport 'prismjs/components/prism-java';\nimport 'prismjs/components/prism-cpp';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-perl';\nimport 'prismjs/components/prism-php';\nimport 'prismjs/components/prism-scss';\nimport 'prismjs/components/prism-diff';\n\n\n@Component({\n    selector: 'markdown,[Markdown]',\n    template: '<ng-content></ng-content>',\n    styles: [\n        `.token.operator, .token.entity, .token.url, .language-css .token.string, .style .token.string {\n            background: none;\n        }`\n    ]\n})\nexport class MarkdownComponent implements OnInit, AfterViewInit {\n    @Input() path: string;\n    \n    private md: any;\n    private ext: string;\n\n    constructor(\n        private mdService: MarkdownService,\n        private el: ElementRef,\n        private http: Http\n    ) { }\n\n    ngOnInit() {\n        // console.log(this.path);\n        // console.log('The component is initialized');\n    }\n\n    /**\n     * on path input change\n     */\n    ngOnChanges() {\n        this.getContent();\n    }\n\n    /**\n     *\n     */\n    ngAfterViewInit() {\n        if (!this.path) {\n            this.md = this.prepare(this.el.nativeElement.innerHTML);\n            this.el.nativeElement.innerHTML = marked(this.md);\n            Prism.highlightAll(false);\n        } else {\n            this.getContent();\n        }\n    }\n\n    /**\n     * get remote conent;\n     */\n    getContent() {\n        if (!!this.path) {\n            this.ext = this.path.split('.').splice(-1).join();\n        }\n\n        this.mdService.getContent(this.path)\n            .subscribe(resp => {\n                this.md = this.ext !== 'md' ? '```' + this.ext + '\\n' + resp.text() + '\\n```' : resp.text();\n                this.el.nativeElement.innerHTML = marked(this.prepare(this.md));\n                Prism.highlightAll(false);\n            },\n            err => this.handleError);\n    }\n\n    /**\n     * catch http error\n     */\n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n\n    /**\n     * Prepare string\n     */\n    prepare(raw: any) {\n        if (!raw) {\n            return '';\n        }\n        if (this.ext === 'md' || !this.path) {\n            let isCodeBlock = false;\n            return raw.split('\\n').map((line: string) => {\n                if (this.trimLeft(line).substring(0, 3) === \"```\") {\n                    isCodeBlock = !isCodeBlock;\n                }\n                return isCodeBlock ? line : line.trim();\n            }).join('\\n');\n        }\n        return raw;\n    }\n\n    /**\n     * Trim left whitespace\n     */\n    trimLeft(line: string) {\n        return line.replace(/^\\s+|\\s+$/g, '');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/markdown/markdown.component.ts","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { MarkdownComponent } from './markdown.component';\nimport { MarkdownService } from './markdown.service';\n\n@NgModule({\n  exports: [MarkdownComponent],\n  imports: [HttpModule],\n  declarations: [MarkdownComponent],\n  providers: [MarkdownService],\n})\nexport class MarkdownModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MarkdownModule,\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/markdown/markdown.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\nexports.push([module.id, \"@import url(https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css);\", \"\"]);\n\n// module\nexports.push([module.id, \"\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/demo.component.css\n// module id = 481\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n\\n    <h1 class=\\\"text-center\\\">\\n        Angular 2 markdown Example\\n    </h1>\\n\\n    <div class=\\\"row\\\">\\n\\n\\n        <div class=\\\"col-xs-6 col-sm-6 col-md-6 col-lg-6\\\">\\n            <pre>\\n# Headers\\n\\n# H1\\n## H2\\n### H3\\n#### H4\\n##### H5\\n###### H6\\n\\nAlternatively, for H1 and H2, an underline-ish style:\\n\\nAlt-H1\\n======\\n\\nAlt-H2\\n------\\n\\n\\n\\n# Emphasis\\n\\nEmphasis, aka italics, with *asterisks* or _underscores_.\\n\\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\\n\\nCombined emphasis with **asterisks and _underscores_**.\\n\\nStrikethrough uses two tildes. ~~Scratch this.~~\\n\\n# Lists\\n\\n(In this example, leading and trailing spaces are shown with with dots: ⋅)\\n\\n1. First ordered list item\\n2. Another item\\n⋅⋅* Unordered sub-list.\\n1. Actual numbers don't matter, just that it's a number\\n⋅⋅1. Ordered sub-list\\n4. And another item.\\n\\n⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\\n\\n⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅\\n⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅\\n⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\\n\\n* Unordered list can use asterisks\\n- Or minuses\\n+ Or pluses\\n\\n\\n# Links\\n\\nThere are two ways to create links.\\n\\n[I'm an inline-style link](https://www.google.com)\\n\\n[I'm an inline-style link with title](https://www.google.com \\\"Google's Homepage\\\")\\n\\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\\n\\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\\n\\n[You can use numbers for reference-style link definitions][1]\\n\\nOr leave it empty and use the [link text itself].\\n\\nURLs and URLs in angle brackets will automatically get turned into links.\\nhttp://www.example.com or <http://www.example.com> and sometimes\\nexample.com (but not on Github, for example).\\n\\nSome text to show that the reference links can follow later.\\n\\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\\n[1]: http://slashdot.org\\n[link text itself]: http://www.reddit.com\\n\\n\\n\\n# Images\\n\\nHere's our logo (hover to see the title text):\\n\\nInline-style:\\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \\\"Logo Title Text 1\\\")\\n\\nReference-style:\\n![alt text][logo]\\n\\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \\\"Logo Title Text\\n\\n\\n\\n# Code and Syntax Highlighting\\n\\nInline `code` has `back-ticks around` it.\\n\\n```javascript\\nvar s = \\\"JavaScript syntax highlighting\\\";\\nalert(s);\\n```\\n\\n```python\\ns = \\\"Python syntax highlighting\\\"\\nprint s\\n```\\n\\n```\\nNo language indicated, so no syntax highlighting.\\nBut let's throw in a <b>tag</b>.\\n```\\nvar s = \\\"JavaScript syntax highlighting\\\";\\nalert(s);\\ns = \\\"Python syntax highlighting\\\"\\nprint s\\n\\n\\n\\n# Blockquotes\\n\\n> Blockquotes are very handy in email to emulate reply text.\\n> This line is part of the same quote.\\n\\nQuote break.\\n\\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.\\n\\n\\n# Horizontal Rule\\n\\nThree or more...\\n\\n---\\n\\nHyphens\\n\\n***\\n\\nAsterisks\\n\\n___\\n\\nUnderscores\\n            </pre>\\n        </div>\\n\\n        <div class=\\\"col-xs-6 col-sm-6 col-md-6 col-lg-6\\\">\\n            <markdown>\\n\\n              # Headers\\n\\n              # H1\\n              ## H2\\n              ### H3\\n              #### H4\\n              ##### H5\\n              ###### H6\\n\\n              Alternatively, for H1 and H2, an underline-ish style:\\n\\n              Alt-H1\\n              ======\\n\\n              Alt-H2\\n              ------\\n\\n\\n\\n              # Emphasis\\n\\n              Emphasis, aka italics, with *asterisks* or _underscores_.\\n\\n              Strong emphasis, aka bold, with **asterisks** or __underscores__.\\n\\n              Combined emphasis with **asterisks and _underscores_**.\\n\\n              Strikethrough uses two tildes. ~~Scratch this.~~\\n\\n              # Lists\\n\\n              (In this example, leading and trailing spaces are shown with with dots: ⋅)\\n\\n              1. First ordered list item\\n              2. Another item\\n              ⋅⋅* Unordered sub-list.\\n              1. Actual numbers don't matter, just that it's a number\\n              ⋅⋅1. Ordered sub-list\\n              4. And another item.\\n\\n              ⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\\n\\n              ⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅\\n              ⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅\\n              ⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\\n\\n              * Unordered list can use asterisks\\n              - Or minuses\\n              + Or pluses\\n\\n\\n              # Links\\n\\n              There are two ways to create links.\\n\\n              [I'm an inline-style link](https://www.google.com)\\n\\n              [I'm an inline-style link with title](https://www.google.com \\\"Google's Homepage\\\")\\n\\n              [I'm a reference-style link][Arbitrary case-insensitive reference text]\\n\\n              [I'm a relative reference to a repository file](../blob/master/LICENSE)\\n\\n              [You can use numbers for reference-style link definitions][1]\\n\\n              Or leave it empty and use the [link text itself].\\n\\n              URLs and URLs in angle brackets will automatically get turned into links.\\n              http://www.example.com or <http://www.example.com> and sometimes\\n              example.com (but not on Github, for example).\\n\\n              Some text to show that the reference links can follow later.\\n\\n              [arbitrary case-insensitive reference text]: https://www.mozilla.org\\n              [1]: http://slashdot.org\\n              [link text itself]: http://www.reddit.com\\n\\n\\n\\n              # Images\\n\\n              Here's our logo (hover to see the title text):\\n\\n              Inline-style:\\n              ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \\\"Logo Title Text 1\\\")\\n\\n              Reference-style:\\n              ![alt text][logo]\\n\\n              [logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \\\"Logo Title Text\\n\\n\\n\\n              # Code and Syntax Highlighting\\n\\n              Inline `code` has `back-ticks around` it.\\n\\n              ```javascript\\n              var s = \\\"JavaScript syntax highlighting\\\";\\n              alert(s);\\n              ```\\n\\n              ```python\\n              s = \\\"Python syntax highlighting\\\"\\n              print s\\n              ```\\n\\n              ```\\n              No language indicated, so no syntax highlighting.\\n              But let's throw in a <b>tag</b>.\\n              ```\\n              var s = \\\"JavaScript syntax highlighting\\\";\\n              alert(s);\\n              s = \\\"Python syntax highlighting\\\"\\n              print s\\n\\n\\n\\n              # Blockquotes\\n\\n              > Blockquotes are very handy in email to emulate reply text.\\n              > This line is part of the same quote.\\n\\n              Quote break.\\n\\n              > This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.\\n\\n\\n              # Horizontal Rule\\n\\n              Three or more...\\n\\n              ---\\n\\n              Hyphens\\n\\n              ***\\n\\n              Asterisks\\n\\n              ___\\n\\n              Underscores\\n\\n\\n            </markdown>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n            <markdown path=\\\"src/app/demo/demo.md\\\"> </markdown>\\n            <div Markdown path=\\\"src/app/demo/demo.html\\\"> </div>\\n            <div Markdown path=\\\"src/app/demo/demo.cpp\\\"> </div>\\n        </div>\\n    </div>\\n\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/demo.component.html\n// module id = 492\n// module chunks = 1"],"sourceRoot":""}